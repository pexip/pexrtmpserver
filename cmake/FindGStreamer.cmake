# - Try to find GStreamer
# Once done this will define
#
#  GSTREAMER_FOUND - system has GStreamer
#  GSTREAMER_INCLUDE_DIRS - the GStreamer include directory
#  GSTREAMER_LIBRARIES - the libraries needed to use GStreamer
#  GSTREAMER_DEFINITIONS - Compiler switches required for using GStreamer
#  GSTREAMER_VERSION - the version of GStreamer

# Copyright (c) 2008, Helio Chissini de Castro, <helio@kde.org>
#           (c) 2006, Tim Beaulen <tbscope@gmail.com>
#           (c) 2013, Dirk Van Haerenborgh

include(LibFindMacros)

if(NOT DEFINED GStreamer_FIND_VERSION)
    set(GStreamer_FIND_VERSION "0.10")
endif(NOT DEFINED GStreamer_FIND_VERSION)

if(GSTREAMER_INCLUDE_DIRS AND
    GSTREAMER_LIBRARIES AND
    GSTREAMER_BASE_LIBRARY AND
    (GSTREAMER_INTERFACE_LIBRARY AND GSTREAMER_APP_LIBRARY) OR (GSTREAMER_VERSION_MAJOR GREATER 0) AND
    GSTREAMER_VERSION_MAJOR EQUAL GStreamer_FIND_VERSION_MAJOR AND
    GSTREAMER_VERSION_MINOR EQUAL GStreamer_FIND_VERSION_MINOR)

   # in cache already
   set(GStreamer_FIND_QUIETLY TRUE)

else(GSTREAMER_INCLUDE_DIRS AND
      GSTREAMER_LIBRARIES AND
      GSTREAMER_BASE_LIBRARY AND
    (GSTREAMER_INTERFACE_LIBRARY AND GSTREAMER_APP_LIBRARY) OR (GSTREAMER_VERSION_MAJOR GREATER 0) AND
      GSTREAMER_VERSION_MAJOR EQUAL GStreamer_FIND_VERSION_MAJOR AND
      GSTREAMER_VERSION_MINOR EQUAL GStreamer_FIND_VERSION_MINOR)

   set(GStreamer_FIND_QUIETLY FALSE)
   unset(GSTREAMER_INCLUDE_DIRS)
   unset(GSTREAMER_LIBRARIES)
   unset(GSTREAMER_BASE_LIBRARY)
   unset(GSTREAMER_INTERFACE_LIBRARY)
   unset(GSTREAMER_APP_LIBRARY)
   unset(GSTREAMER_VERSION)
   unset(GSTREAMER_VERSION_MAJOR)
   unset(GSTREAMER_VERSION_MINOR)

endif(GSTREAMER_INCLUDE_DIRS AND
       GSTREAMER_LIBRARIES AND
       GSTREAMER_BASE_LIBRARY AND
      (GSTREAMER_INTERFACE_LIBRARY AND GSTREAMER_APP_LIBRARY) OR (GSTREAMER_VERSION_MAJOR GREATER 0) AND
       GSTREAMER_VERSION_MAJOR EQUAL GStreamer_FIND_VERSION_MAJOR AND
       GSTREAMER_VERSION_MINOR EQUAL GStreamer_FIND_VERSION_MINOR)

if(NOT WIN32)
   FIND_PACKAGE(PkgConfig REQUIRED)
   # use pkg-config to get the directories and then use these values
   # in the find_path() and find_library() calls
   # don't make this check required - otherwise you can't use macro_optional_find_package on this one
   set(ENV{PKG_CONFIG_PATH} ${GStreamer_ROOT}/lib/pkgconfig)
   PKG_CHECK_MODULES(PKG_GSTREAMER gstreamer-${GStreamer_FIND_VERSION_MAJOR}.${GStreamer_FIND_VERSION_MINOR})

   set(GSTREAMER_DEFINITIONS ${PKG_GSTREAMER_CFLAGS})
   set(GSTREAMER_VERSION ${PKG_GSTREAMER_VERSION} CACHE INTERNAL "Gstreamer version")
   
   #FIXME: this is a quick hack
   set(GSTREAMER_LIBRARY_DIRS ${PKG_GSTREAMER_LIBRARY_DIRS})

   THREE_PART_VERSION_TO_VARS(${GSTREAMER_VERSION} GSTREAMER_VERSION_MAJOR GSTREAMER_VERSION_MINOR GSTREAMER_VERSION_PATCH)
endif(NOT WIN32)

find_path(GSTREAMER_INCLUDE_DIRS gst/gst.h
   PATHS
   ${PKG_GSTREAMER_INCLUDE_DIRS}
   PATH_SUFFIXES gstreamer-${GStreamer_FIND_VERSION_MAJOR}.${GStreamer_FIND_VERSION_MINOR}
   )

find_library(GSTREAMER_LIBRARY NAMES gstreamer-${GStreamer_FIND_VERSION_MAJOR}.${GStreamer_FIND_VERSION_MINOR}
   PATHS
   ${PKG_GSTREAMER_LIBRARY_DIRS}
   )

find_library(GSTREAMER_BASE_LIBRARY NAMES gstbase-${GStreamer_FIND_VERSION_MAJOR}.${GStreamer_FIND_VERSION_MINOR}
   PATHS
   ${PKG_GSTREAMER_LIBRARY_DIRS}
   )

find_library(GSTREAMER_INTERFACE_LIBRARY NAMES gstinterfaces-${GStreamer_FIND_VERSION_MAJOR}.${GStreamer_FIND_VERSION_MINOR}
   PATHS
   ${PKG_GSTREAMER_LIBRARY_DIRS}
   )

find_library(GSTREAMER_APP_LIBRARY NAMES gstapp-${GStreamer_FIND_VERSION_MAJOR}.${GStreamer_FIND_VERSION_MINOR}
   PATHS
   ${PKG_GSTREAMER_LIBRARY_DIRS}
   )

if(GSTREAMER_INCLUDE_DIRS)
else(GSTREAMER_INCLUDE_DIRS)
   message(STATUS "GStreamer: WARNING: include dir not found")
endif(GSTREAMER_INCLUDE_DIRS)


if(GSTREAMER_LIBRARY)
   set(GSTREAMER_LIBRARIES ${GSTREAMER_LIBRARY})
else(GSTREAMER_LIBRARY)
   message(STATUS "GStreamer: WARNING: library not found")
endif(GSTREAMER_LIBRARY)

if(GSTREAMER_BASE_LIBRARY)
   set(GSTREAMER_LIBRARIES ${GSTREAMER_LIBRARIES} ${GSTREAMER_BASE_LIBRARY})
else(GSTREAMER_BASE_LIBRARY)
   message(STATUS "GStreamer: WARNING: base library not found")
endif(GSTREAMER_BASE_LIBRARY)

if(GSTREAMER_INTERFACE_LIBRARY)
   set(GSTREAMER_LIBRARIES ${GSTREAMER_LIBRARIES} ${GSTREAMER_INTERFACE_LIBRARY})
elseif(GSTREAMER_VERSION_MAJOR GREATER 0)
   #do nothing
else(GSTREAMER_INTERFACE_LIBRARY)
   message(STATUS "GStreamer: WARNING: interface library not found")
endif(GSTREAMER_INTERFACE_LIBRARY)

if(GSTREAMER_APP_LIBRARY)
    set(GSTREAMER_LIBRARIES ${GSTREAMER_LIBRARIES} ${GSTREAMER_APP_LIBRARY})
elseif(GSTREAMER_VERSION_MAJOR GREATER 0)
   #do nothing
else(GSTREAMER_APP_LIBRARY)
   message(STATUS "GStreamer: WARNING: app library not found")
endif(GSTREAMER_APP_LIBRARY)

if(GSTREAMER_INCLUDE_DIRS AND GSTREAMER_LIBRARY AND GSTREAMER_BASE_LIBRARY AND
    (GSTREAMER_INTERFACE_LIBRARY AND GSTREAMER_APP_LIBRARY) OR (GSTREAMER_VERSION_MAJOR GREATER 0) )
   set(GSTREAMER_FOUND TRUE)
else(GSTREAMER_INCLUDE_DIRS AND GSTREAMER_LIBRARY AND GSTREAMER_BASE_LIBRARY AND
    (GSTREAMER_INTERFACE_LIBRARY AND GSTREAMER_APP_LIBRARY) OR (GSTREAMER_VERSION_MAJOR GREATER 0) )
   set(GSTREAMER_FOUND FALSE)
endif(GSTREAMER_INCLUDE_DIRS AND GSTREAMER_LIBRARY AND GSTREAMER_BASE_LIBRARY AND
    (GSTREAMER_INTERFACE_LIBRARY AND GSTREAMER_APP_LIBRARY) OR (GSTREAMER_VERSION_MAJOR GREATER 0) )


if(NOT GSTREAMER_FOUND)
   if(GStreamer_FIND_REQUIRED)
      message(SEND_ERROR "Could NOT find GStreamer")
   endif(GStreamer_FIND_REQUIRED)
endif(NOT GSTREAMER_FOUND)

mark_as_advanced(GSTREAMER_INCLUDE_DIRS GSTREAMER_LIBRARY GSTREAMER_LIBRARIES GSTREAMER_BASE_LIBRARY GSTREAMER_INTERFACE_LIBRARY GSTREAMER_APP_LIBRARY GSTREAMER_VERSION)